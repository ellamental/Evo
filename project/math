(((modules math cond))
 (div (type . num)
      (proto (num . x) (num . y))
      (doc . "Divide x by y")
      (modules math cond)
      (tests ((6 2) . 3))
      (gene-pool (((min-correct . 0.7) (max-pool-size . 100))) 
                 (((min-correct . 0.5) (max-pool-size . 100))))
      (best . /))
 (mul (best . *)
      (type . num)
      (proto (num . x) (num . y))
      (doc . "Hello")
      (modules math cond)
      (tests ((1 3) . 3) ((4 2) . 8) ((3 2) . 6))
      (gene-pool (((min-correct . 0.7) (max-pool-size . 100))) 
                 (((min-correct . 0.5) (max-pool-size . 100)))))
 (plus (best . +)
       (doc . "Add x and y")
       (type . num)
       (proto (num . x) (num . y))
       (modules math cond)
       (gene-pool (((min-correct . 0.7) (max-pool-size . 100))) 
                  (((min-correct . 0.5) (max-pool-size . 100))))
       (tests ((3 4) . 7) ((1 2) . 3) ((4 5) . 9)))
 (minus (best . -)
        (doc . "Subtract y from x")
        (type . num)
        (proto (num . x) (num . y))
        (modules math cond)
        (gene-pool (((min-correct . 0.7) (max-pool-size . 100))) 
                   (((min-correct . 0.5) (max-pool-size . 100))))
        (tests ((4 3) . 1) ((5 2) . 3) ((9 5) . 4))))
